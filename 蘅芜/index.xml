<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>蘅芜s on 桂圆的第二人生 </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://guixiaoyuan.github.io/%E8%98%85%E8%8A%9C/</link>
    <language>en-us</language>
    <author>Xiaoyuan Gui</author>
    <copyright>Copyright (c) 2017, Xiaoyuan Gui; all rights reserved.</copyright>
    <updated>Thu, 23 Aug 2018 00:30:03 CST</updated>
    
    <item>
      <title>2018元贝驾考工作经验</title>
      <link>https://guixiaoyuan.github.io/post/2018-08-23/</link>
      <pubDate>Thu, 23 Aug 2018 00:30:03 CST</pubDate>
      <author>Xiaoyuan Gui</author>
      <guid>https://guixiaoyuan.github.io/post/2018-08-23/</guid>
      <description>&lt;p&gt;我在 2018年 8 月份离职了，这份工作实际干了不超过4个月，主要是团队项目管理原因，每天干活干的特别憋屈，功劳是别人的，锅都是自己的。当初进入这家公司也是够蠢的，只注重短期利益，忽略长远发展，简单概括就是短视。这家公司是一个有20人不到的团队。具体的细节不阐述了。说说得到的经验教训。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;相对于稳定的体制之内的工作，到处漂泊的程序员就是无业啊尼玛！&lt;/p&gt;

&lt;p&gt;可是编程是门手艺活儿，既然选择了，那就做下去吧。&lt;/p&gt;

&lt;p&gt;经过这样的一段经历之后，以后找公司一定要有排除选项：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;看公司规模，低于 100 人的排除&lt;/li&gt;
&lt;li&gt;看公司类型，互联网公司优先，拒绝外包&lt;/li&gt;
&lt;li&gt;看公司成立时间，少于两年的排除&lt;/li&gt;
&lt;li&gt;看公司的产品是否可行，是否盈利（是否游走在法律的边缘，比如p2p，文娱）&lt;/li&gt;
&lt;li&gt;看公司的技术团队和管理层，是否名校或名企出身&lt;/li&gt;
&lt;li&gt;看公司的文化氛围，互联网文化好的优先考虑&lt;/li&gt;
&lt;li&gt;看公司在招的其他岗位，对组织架构有个大概了解&lt;/li&gt;
&lt;li&gt;同事是怎么样的&lt;/li&gt;
&lt;li&gt;老板是怎么样的&lt;/li&gt;
&lt;li&gt;工作空间的舒适程度&lt;/li&gt;
&lt;li&gt;报酬&lt;/li&gt;
&lt;li&gt;每天实际上在做的事情&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;v站上对换工作的态度，我觉得有道理。贴出来共勉。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;换工作是一件经过深思熟虑的严肃事情&lt;/li&gt;
&lt;li&gt;频繁换工作是 loser 做的事情&lt;/li&gt;
&lt;li&gt;公司应该提供给员工尽可能好的条件&lt;/li&gt;
&lt;li&gt;如果你自己从来没有从期权上赚过钱，就不要在招聘时强调期权&lt;/li&gt;
&lt;li&gt;招聘时请尽量给出薪酬范围&lt;/li&gt;
&lt;li&gt;求职时请附上自己的薪酬要求&lt;/li&gt;
&lt;li&gt;说话前经过足够的思考是好习惯&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>2018三月面试经历</title>
      <link>https://guixiaoyuan.github.io/post/2018-03-29/</link>
      <pubDate>Thu, 29 Mar 2018 00:30:03 CST</pubDate>
      <author>Xiaoyuan Gui</author>
      <guid>https://guixiaoyuan.github.io/post/2018-03-29/</guid>
      <description>&lt;p&gt;金三银四。求职的好机会。第一个需求发展，第二个看看市面上需要什么样的人才，找准自己的定位。坐标南京。面试了努比亚，苏宁，焦点科技，地平线机器人。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;地平线机器人&#34;&gt;地平线机器人&lt;/h2&gt;

&lt;p&gt;fragment与activity的交互，fragment的生命周期，什么时候绘制view。
怎么使用fragment，不带参数的fragment有什么好处？带参数的fragment会有什么弊端？&lt;/p&gt;

&lt;p&gt;android有几大布局，一般你用什么？为什么？（估计是从性能优化的角度说，但是还没搞懂后续他会问什么，因为没回答出来他满意的答案，他也没继续问）&lt;/p&gt;

&lt;p&gt;RxJava使用，Rxjava的好处。对Rxjava的理解。RxJava 操作符，比如map 和 flatMap 的区别，更高阶的东西需要去掌握;&lt;/p&gt;

&lt;p&gt;Touch事件传递。比如说我现在有个两层布局，里面有一个button，点击button的时候，说说调用的方法。&lt;/p&gt;

&lt;p&gt;封装了网络了，说说封装思路是什么？对httpClient的理解，google还支持使用它么？（这个我说不知道，估计后面本来还会问为什么不支持。)&lt;/p&gt;

&lt;p&gt;用过多线程么？多线程之间是怎么通信的。&lt;/p&gt;

&lt;p&gt;封装网路用了观察者模式，能解释观察者模式么？&lt;/p&gt;

&lt;p&gt;地平线机器人是福利待遇最好的，还没面试前，hr就开始介绍福利。技术面试官非常深入，基本上围绕你的经历然后深度挖掘内容，是技术氛围非常厉害的一家公司。&lt;/p&gt;

&lt;h2 id=&#34;努比亚&#34;&gt;努比亚&lt;/h2&gt;

&lt;p&gt;看过Glide源码么？介绍一下里面的缓存机制。&lt;/p&gt;

&lt;p&gt;用过handler么，谈谈handler机制。&lt;/p&gt;

&lt;p&gt;使用过动画么，为啥引进属性动画？&lt;/p&gt;

&lt;p&gt;了解过内存泄漏么？怎么解决的？&lt;/p&gt;

&lt;p&gt;ANR问题怎么处理？&lt;/p&gt;

&lt;p&gt;线程池用过么？&lt;/p&gt;

&lt;p&gt;中等偏上的公司，问题比较有代表性，对系统性能要求比较高。&lt;/p&gt;

&lt;h2 id=&#34;苏宁金融&#34;&gt;苏宁金融：&lt;/h2&gt;

&lt;p&gt;fragment的生命周期？view是在什么时候绘制出来的？&lt;/p&gt;

&lt;p&gt;设计模式用过么？说说你熟悉的几种？单例模式有几种。手写一个。&lt;/p&gt;

&lt;p&gt;HashMap是无序的么？说出几个无序有序的map。&lt;/p&gt;

&lt;p&gt;HashMap底层设计是什么样子的？为啥这么设计。&lt;/p&gt;

&lt;p&gt;简要说一下，hashmap put 一个数值进去，是怎么进去的。怎么查找的？又聊了聊数组。&lt;/p&gt;

&lt;p&gt;使用过kotlin么？&lt;/p&gt;

&lt;p&gt;苏宁更偏向于基础问题，面试苏宁的时候，正好碰上了苏宁扩张。面试官非常真诚，讲了很多脱离技术的问题，对于一个技术来说，还是受益匪浅的。虽然过了苏宁的技术面试，但是被人事卡下来了。工资要的过高。还是挺可惜的，没有进苏宁金融。&lt;/p&gt;

&lt;h2 id=&#34;焦点科技&#34;&gt;焦点科技&lt;/h2&gt;

&lt;p&gt;v7包里面使用过什么控件？&lt;/p&gt;

&lt;p&gt;怎么保证推送的覆盖率？&lt;/p&gt;

&lt;p&gt;进程间通信有经验么？&lt;/p&gt;

&lt;p&gt;android 安全有过经验么？&lt;/p&gt;

&lt;p&gt;service用过么？&lt;/p&gt;

&lt;p&gt;焦点科技面试我的部门。大概android7，8个人，负责7，8个app。不缺业务码农，需要对性能，安全，进程间通信方面有经验的人才。会RN，在焦点科技是加分项。&lt;/p&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;技术上欠缺的是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;进程间通信，&lt;/li&gt;
&lt;li&gt;多线程并发，&lt;/li&gt;
&lt;li&gt;view的绘制处理，滑动事件的冲突，&lt;/li&gt;
&lt;li&gt;Android安全，&lt;/li&gt;
&lt;li&gt;java基础&lt;/li&gt;
&lt;li&gt;设计模式&lt;/li&gt;
&lt;li&gt;对开源库的代码理解&lt;/li&gt;
&lt;li&gt;RN混合开发（加分项）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要去做的是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对源码的深度理解。&lt;/li&gt;
&lt;li&gt;think in java&lt;/li&gt;
&lt;li&gt;java设计模式&lt;/li&gt;
&lt;li&gt;高并发&lt;/li&gt;
&lt;li&gt;JS那本经典&lt;/li&gt;
&lt;li&gt;Android两本经典&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>存在的意义</title>
      <link>https://guixiaoyuan.github.io/post/2017-08-20/</link>
      <pubDate>Sun, 20 Aug 2017 00:30:03 CST</pubDate>
      <author>Xiaoyuan Gui</author>
      <guid>https://guixiaoyuan.github.io/post/2017-08-20/</guid>
      <description>&lt;p&gt;欢迎来到桂圆的第二人生。&lt;/p&gt;

&lt;p&gt;这是我的第一篇博文。万事开头难，不过凡事要具体了的话，就会很深入，深入的话就会迎刃而解。&lt;/p&gt;

&lt;h2 id=&#34;写博客的目的&#34;&gt;写博客的目的&lt;/h2&gt;

&lt;p&gt;知识管理。并且多思考，把自己思考的过程展现给大家。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么要知识管理？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;德鲁克说过，没有人为你负责，除了你自己，而你唯一的资本就是知识。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有兴趣的同学可以参考一般的知识管理&lt;br /&gt;
&lt;a href=&#34;http://www.jianshu.com/p/dbdac17eb9ff&#34;&gt;个人知识管理的方法&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;作为一个程序员来说，IT技术更新速度迭代快，也就是意味着我们需要不断的去学习，才能不被淘汰。所以知识变成体系才格外重要。体系的管理自己的知识会让我们：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;更有效地学习新的知识。&lt;/li&gt;
&lt;li&gt;更好地掌握知识。&lt;/li&gt;
&lt;li&gt;节约时间成本。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而我自己管理知识的方法总结一下就是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;知识积累，使用文档管理工具，比如有道云笔记，Evernote等等。&lt;/li&gt;
&lt;li&gt;碎片整理，将第一步的内容初步消化。&lt;/li&gt;
&lt;li&gt;深度加工，将第二步的内容以思考的方式写成博客。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为什么推崇写博客为深度加工思考。给大家推荐两个不错的文章。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/&#34;&gt;为什么你现在就应该开始写博客&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mindhacks.cn/2009/02/09/writing-is-better-thinking/&#34;&gt;书写是为了更好的思考&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;怎么写博客&#34;&gt;怎么写博客？&lt;/h2&gt;

&lt;p&gt;明白为什么写博客的原因之后，就是去做了。理论有了之后，实践并不是一间很难的事情。&lt;/p&gt;

&lt;p&gt;我自己用的技术栈是Github pages + hugo&lt;/p&gt;

&lt;p&gt;选择hugo的原因是速度快，易上手。5000篇文章的博客，Hugo生成部署整个网站只要6秒。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages官网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;hugo的初体验&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然写博客，我是默认你会markdown。如果你想让你的博客好看一点，当然也要会一点前端知识。&lt;/p&gt;

&lt;p&gt;好好的去营造属于你自己的第二人生吧。&lt;/p&gt;

&lt;h2 id=&#34;彩蛋&#34;&gt;彩蛋&lt;/h2&gt;

&lt;p&gt;当然你看到这里，不给你一点福利好像说不过去。这次的福利对听音乐的来说，可是一个爆炸性的消息。&lt;/p&gt;

&lt;p&gt;作为一个程序员来说，听着音乐敲着代码，可谓是人生一大乐事之一。但是国内版权的原因，导致了很多歌在不同的平台独家授权。个人比较喜欢用网易云音乐。可是在网易我听不到五月天，李宗盛，以及滚石唱片的所有。最近又下架了一大批歌曲。而且由于上述公司都是阿里旗下的产业，所以即使网易刚刚融到了7个亿，也不可能拿到这个版权。而韩文歌的版权也基本上被qq拿到。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;所以，这个时候，一个全平台都能听的的音乐程序呼之欲出。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://listen1.github.io/listen1/&#34;&gt;Listen 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;目前支持windows平台，mac，linux，chrome插件，firefox插件。&lt;/p&gt;

&lt;p&gt;不涉及侵权问题，因为只是做了一个规整。听歌的链接还是各大平台。缺点就是目前没有登陆同步歌单的功能，希望有志之士可以贡献自己的力量。&lt;/p&gt;

&lt;p&gt;想做一个android app版本的，有想做的可以联系我一起贡献力量啊。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
